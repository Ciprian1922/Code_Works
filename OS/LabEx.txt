1.1 Is the code snippet bellow executing corectly? If yes, what does it do? If not, please fix it and describe what it does, and rewrite the code accordingly.
char fd, c;
fd = open("myfile.txt". O_RDONLY | O_TRUNC);
read(fd, &c, 1);
printf("%c",c);
close(f);

1.2  The code snippet bellow is supposed to count the number of digits from a file. Is the code working corectly? If not, please fix it and describe what it does, and rewrite the code accordingly.

int main()
{
	char c, total, int f;
	f = open("myfile.txt", O_RDONLY)
	while (br > 0)
	{
		int br = read(f, c, 1);
		if(indigit(c))
			total++;
	}
	close(f);
	printf("Fund %d digits", total);
	return 1;
}

1.3  Describe what is wrong with the code snippet bellow(if anything at all), and fix the problem(s) as required, and rewrite the code accordingly.

char v[1024];
unsigned long fd = open("/my/OF/pics", O_RDONLY)
read(fd, &v, 1023);
printf("File contents: %s", v);
close(fd);

1.4  The code snippet bellow is supposed to create a child process, and wait for the child to print "Hello world". Is it working corectly? If not, please fix it and rewrite the code accordingly.

pid_t p = fork();
char &n;
if (p > 0)
	printf("Hello world");
wait(&n);
printf("Parent finished!");
return 1;

1.5  The following code snippet should have a parent process that spawns two additional children of its own. The first child should show all even numbers from 1 to 1000 abd the second child numbers from 1000 down to 1. Is it correct? If not, please fix any issues and rewrite the code accordingly.

pid_t p;
int s;
p = fork();
if (p > 0)
{
	char i;
	for(i=1; i<1000; i++)
		if(i%2 == 0)
			printf("Child 1 prints : %d\n", i);
}
else
{
	p = fork();
	if(p < 0)
	{
		char i;
		for(i=1000; i>=1; i--)
			if(i%2 == 1)
				printf("Child 2 prints: %d\n", i);
	}
}
waitpid(&p, &s, NULL);
waitpid(&p, &s, NULL);
printf("Children finished printing."); //only the parent needs to print this

1.6  The code snippet bellow is supposed to create a child process that prints the first argument given in the command line. Is it working correctly? If not, please fix it and rewrite it accordingly.

int main(int argv, char **argc)
{
unsigned long p = fork();
if(p == 0)
	printf("First argument is: %s\n", argv[1]);
return 0;
}

1.7 What the code snippet bellow does and fix any problems you find, rewriting the code as necessary.s

int main(int argv, char **argc)
{
	int pid = fork();
	if(pid == 0)
		exit(260);
	int status;
	wait(&status);
}
